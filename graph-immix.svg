<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1686.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1669" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1669" > </text>
<g id="frames">
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="885" width="207.7" height="15.0" fill="rgb(241,187,49)" rx="2" ry="2" />
<text  x="13.38" y="895.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (87,878 samples, 17.44%)</title><rect x="10.6" y="85" width="205.7" height="15.0" fill="rgb(214,169,21)" rx="2" ry="2" />
<text  x="13.59" y="95.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="789" width="207.7" height="15.0" fill="rgb(230,94,54)" rx="2" ry="2" />
<text  x="13.38" y="799.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="501" width="207.7" height="15.0" fill="rgb(218,221,40)" rx="2" ry="2" />
<text  x="13.38" y="511.5" >0xffffffff00000062</text>
</g>
<g >
<title>libsystem_pthread.dylib`_pthread_exit_if_canceled (2,616 samples, 0.52%)</title><rect x="801.9" y="1573" width="6.2" height="15.0" fill="rgb(224,205,29)" rx="2" ry="2" />
<text  x="804.94" y="1583.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_setjmp (85 samples, 0.02%)</title><rect x="1048.3" y="1557" width="0.2" height="15.0" fill="rgb(209,139,16)" rx="2" ry="2" />
<text  x="1051.34" y="1567.5" ></text>
</g>
<g >
<title>0xffffffff0000059d (110 samples, 0.02%)</title><rect x="12.0" y="53" width="0.2" height="15.0" fill="rgb(216,58,25)" rx="2" ry="2" />
<text  x="14.95" y="63.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1237" width="207.7" height="15.0" fill="rgb(252,136,6)" rx="2" ry="2" />
<text  x="13.38" y="1247.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,705 samples, 17.60%)</title><rect x="10.4" y="213" width="207.7" height="15.0" fill="rgb(251,205,16)" rx="2" ry="2" />
<text  x="13.38" y="223.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`_SM41scala.collection.immutable.HashMapBuilderD6updateL34scala.collection.immutable.MapNodeL16java.lang.ObjectL16java.lang.ObjectiiiuEO (644 samples, 0.13%)</title><rect x="1188.0" y="1621" width="1.5" height="15.0" fill="rgb(237,219,45)" rx="2" ry="2" />
<text  x="1190.97" y="1631.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM19java.util.ArrayListD3addiL16java.lang.ObjectuEO (79 samples, 0.02%)</title><rect x="808.6" y="1621" width="0.2" height="15.0" fill="rgb(209,123,40)" rx="2" ry="2" />
<text  x="811.57" y="1631.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="325" width="207.7" height="15.0" fill="rgb(231,49,34)" rx="2" ry="2" />
<text  x="13.38" y="335.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff0000059d (429 samples, 0.09%)</title><rect x="216.4" y="101" width="1.0" height="15.0" fill="rgb(221,116,14)" rx="2" ry="2" />
<text  x="219.43" y="111.5" ></text>
</g>
<g >
<title>0x182577e40 (189 samples, 0.04%)</title><rect x="217.5" y="101" width="0.5" height="15.0" fill="rgb(220,125,19)" rx="2" ry="2" />
<text  x="220.53" y="111.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1189" width="207.7" height="15.0" fill="rgb(235,3,33)" rx="2" ry="2" />
<text  x="13.38" y="1199.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="693" width="207.7" height="15.0" fill="rgb(236,16,9)" rx="2" ry="2" />
<text  x="13.38" y="703.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`BlockAllocator_SweepDone (49 samples, 0.01%)</title><rect x="1071.5" y="1573" width="0.1" height="15.0" fill="rgb(233,69,50)" rx="2" ry="2" />
<text  x="1074.48" y="1583.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM35scala.scalanative.runtime.CharArrayD6strideL32scala.scalanative.unsigned.ULongEO (429 samples, 0.09%)</title><rect x="216.4" y="85" width="1.0" height="15.0" fill="rgb(214,147,9)" rx="2" ry="2" />
<text  x="219.43" y="95.5" ></text>
</g>
<g >
<title>0xffffffff00000a40 (72 samples, 0.01%)</title><rect x="215.9" y="69" width="0.1" height="15.0" fill="rgb(205,219,13)" rx="2" ry="2" />
<text  x="218.86" y="79.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="405" width="207.7" height="15.0" fill="rgb(221,33,45)" rx="2" ry="2" />
<text  x="13.38" y="415.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="277" width="207.7" height="15.0" fill="rgb(211,0,42)" rx="2" ry="2" />
<text  x="13.38" y="287.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="517" width="207.7" height="15.0" fill="rgb(221,98,26)" rx="2" ry="2" />
<text  x="13.38" y="527.5" >0xffffffff00000062</text>
</g>
<g >
<title>libsystem_kernel.dylib`__sigaltstack (162 samples, 0.03%)</title><rect x="1046.1" y="1557" width="0.3" height="15.0" fill="rgb(229,72,27)" rx="2" ry="2" />
<text  x="1049.07" y="1567.5" ></text>
</g>
<g >
<title>0x841f0f (129 samples, 0.03%)</title><rect x="10.0" y="1621" width="0.3" height="15.0" fill="rgb(219,210,48)" rx="2" ry="2" />
<text  x="13.04" y="1631.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`Heap_Collect (102,776 samples, 20.39%)</title><rect x="810.9" y="1589" width="240.6" height="15.0" fill="rgb(250,153,33)" rx="2" ry="2" />
<text  x="813.92" y="1599.5" >scalafmt-cli-out`Heap_Collect</text>
</g>
<g >
<title>libsystem_pthread.dylib`_pthread_exit_if_canceled (355 samples, 0.07%)</title><rect x="800.1" y="1557" width="0.8" height="15.0" fill="rgb(247,46,3)" rx="2" ry="2" />
<text  x="803.09" y="1567.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (226 samples, 0.04%)</title><rect x="11.7" y="69" width="0.6" height="15.0" fill="rgb(221,52,24)" rx="2" ry="2" />
<text  x="14.73" y="79.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (133 samples, 0.03%)</title><rect x="810.6" y="1589" width="0.3" height="15.0" fill="rgb(210,222,14)" rx="2" ry="2" />
<text  x="813.57" y="1599.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`cerror (1,116 samples, 0.22%)</title><rect x="798.3" y="1573" width="2.6" height="15.0" fill="rgb(229,166,10)" rx="2" ry="2" />
<text  x="801.31" y="1583.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="357" width="207.7" height="15.0" fill="rgb(248,107,32)" rx="2" ry="2" />
<text  x="13.38" y="367.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000e5f (83 samples, 0.02%)</title><rect x="216.1" y="69" width="0.2" height="15.0" fill="rgb(243,179,44)" rx="2" ry="2" />
<text  x="219.08" y="79.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="981" width="207.7" height="15.0" fill="rgb(239,183,12)" rx="2" ry="2" />
<text  x="13.38" y="991.5" >0xffffffff00000062</text>
</g>
<g >
<title>0x31a00000686 (61 samples, 0.01%)</title><rect x="11.2" y="69" width="0.1" height="15.0" fill="rgb(233,56,25)" rx="2" ry="2" />
<text  x="14.17" y="79.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`Marker_MarkRoots (426 samples, 0.08%)</title><rect x="216.4" y="37" width="1.0" height="15.0" fill="rgb(251,10,20)" rx="2" ry="2" />
<text  x="219.43" y="47.5" ></text>
</g>
<g >
<title>0x31900000685 (50 samples, 0.01%)</title><rect x="11.0" y="69" width="0.2" height="15.0" fill="rgb(210,142,23)" rx="2" ry="2" />
<text  x="14.05" y="79.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM27org.scalafmt.internal.SplitD7withModL15scala.Function0zL27org.scalafmt.internal.SplitEO (189 samples, 0.04%)</title><rect x="217.5" y="85" width="0.5" height="15.0" fill="rgb(210,111,2)" rx="2" ry="2" />
<text  x="220.53" y="95.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`Heap_allocSmallSlow (429 samples, 0.09%)</title><rect x="216.4" y="69" width="1.0" height="15.0" fill="rgb(232,121,40)" rx="2" ry="2" />
<text  x="219.43" y="79.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`__exit (60 samples, 0.01%)</title><rect x="808.4" y="1605" width="0.2" height="15.0" fill="rgb(219,173,15)" rx="2" ry="2" />
<text  x="811.43" y="1615.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="309" width="207.7" height="15.0" fill="rgb(214,49,13)" rx="2" ry="2" />
<text  x="13.38" y="319.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1429" width="207.7" height="15.0" fill="rgb(205,219,47)" rx="2" ry="2" />
<text  x="13.38" y="1439.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`Marker_MarkRoots (56 samples, 0.01%)</title><rect x="809.5" y="1573" width="0.1" height="15.0" fill="rgb(212,215,16)" rx="2" ry="2" />
<text  x="812.46" y="1583.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1285" width="207.7" height="15.0" fill="rgb(227,197,15)" rx="2" ry="2" />
<text  x="13.38" y="1295.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1109" width="207.7" height="15.0" fill="rgb(224,135,16)" rx="2" ry="2" />
<text  x="13.38" y="1119.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,705 samples, 17.60%)</title><rect x="10.4" y="133" width="207.7" height="15.0" fill="rgb(242,20,45)" rx="2" ry="2" />
<text  x="13.38" y="143.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`Heap_allocSmallSlow (66 samples, 0.01%)</title><rect x="809.5" y="1605" width="0.1" height="15.0" fill="rgb(206,206,37)" rx="2" ry="2" />
<text  x="812.46" y="1615.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM18scala.sys.package$D4exitinEO (60 samples, 0.01%)</title><rect x="808.4" y="1621" width="0.2" height="15.0" fill="rgb(231,42,11)" rx="2" ry="2" />
<text  x="811.43" y="1631.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM31org.scalafmt.internal.FormatOpsD14$anonfun$x$1$2L40scala.collection.mutable.ReusableBuilderL15scala.meta.TreeL23scala.meta.tokens.TokenL40scala.collection.mutable.ReusableBuilderEPT31org.scalafmt.internal.FormatOps (75 samples, 0.01%)</title><rect x="809.4" y="1621" width="0.2" height="15.0" fill="rgb(210,59,33)" rx="2" ry="2" />
<text  x="812.43" y="1631.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="549" width="207.7" height="15.0" fill="rgb(223,112,34)" rx="2" ry="2" />
<text  x="13.38" y="559.5" >0xffffffff00000062</text>
</g>
<g >
<title>libsystem_kernel.dylib`cerror (2,481 samples, 0.49%)</title><rect x="788.5" y="1589" width="5.8" height="15.0" fill="rgb(247,222,0)" rx="2" ry="2" />
<text  x="791.53" y="1599.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="613" width="207.7" height="15.0" fill="rgb(244,99,16)" rx="2" ry="2" />
<text  x="13.38" y="623.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff000003fa (89 samples, 0.02%)</title><rect x="12.4" y="69" width="0.2" height="15.0" fill="rgb(234,22,33)" rx="2" ry="2" />
<text  x="15.36" y="79.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="437" width="207.7" height="15.0" fill="rgb(245,184,1)" rx="2" ry="2" />
<text  x="13.38" y="447.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1077" width="207.7" height="15.0" fill="rgb(253,71,18)" rx="2" ry="2" />
<text  x="13.38" y="1087.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="869" width="207.7" height="15.0" fill="rgb(209,228,37)" rx="2" ry="2" />
<text  x="13.38" y="879.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,705 samples, 17.60%)</title><rect x="10.4" y="229" width="207.7" height="15.0" fill="rgb(234,158,19)" rx="2" ry="2" />
<text  x="13.38" y="239.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,705 samples, 17.60%)</title><rect x="10.4" y="181" width="207.7" height="15.0" fill="rgb(234,122,13)" rx="2" ry="2" />
<text  x="13.38" y="191.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`_SM35scala.scalanative.runtime.CharArrayD6strideL32scala.scalanative.unsigned.ULongEO (57 samples, 0.01%)</title><rect x="12.1" y="37" width="0.1" height="15.0" fill="rgb(241,205,29)" rx="2" ry="2" />
<text  x="15.08" y="47.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="645" width="207.7" height="15.0" fill="rgb(239,166,26)" rx="2" ry="2" />
<text  x="13.38" y="655.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="901" width="207.7" height="15.0" fill="rgb(228,192,39)" rx="2" ry="2" />
<text  x="13.38" y="911.5" >0xffffffff00000062</text>
</g>
<g >
<title>libsystem_kernel.dylib`_pthread_exit_if_canceled (717 samples, 0.14%)</title><rect x="796.6" y="1573" width="1.7" height="15.0" fill="rgb(238,209,38)" rx="2" ry="2" />
<text  x="799.63" y="1583.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (49,250 samples, 9.77%)</title><rect x="1072.5" y="1573" width="115.3" height="15.0" fill="rgb(236,113,12)" rx="2" ry="2" />
<text  x="1075.49" y="1583.5" >libsystem_plat..</text>
</g>
<g >
<title>scalafmt-cli-out`_SM32scala.collection.immutable.RangeD4copyiiizL32scala.collection.immutable.RangeEO (69 samples, 0.01%)</title><rect x="810.1" y="1621" width="0.1" height="15.0" fill="rgb(222,99,11)" rx="2" ry="2" />
<text  x="813.07" y="1631.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="821" width="207.7" height="15.0" fill="rgb(207,7,54)" rx="2" ry="2" />
<text  x="13.38" y="831.5" >0xffffffff00000062</text>
</g>
<g >
<title>libsystem_kernel.dylib`cerror_nocancel (435 samples, 0.09%)</title><rect x="800.9" y="1573" width="1.0" height="15.0" fill="rgb(224,63,43)" rx="2" ry="2" />
<text  x="803.93" y="1583.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="725" width="207.7" height="15.0" fill="rgb(225,84,41)" rx="2" ry="2" />
<text  x="13.38" y="735.5" >0xffffffff00000062</text>
</g>
<g >
<title>libsystem_pthread.dylib`_pthread_start (252,006 samples, 50.00%)</title><rect x="218.1" y="1605" width="590.0" height="15.0" fill="rgb(207,229,54)" rx="2" ry="2" />
<text  x="221.07" y="1615.5" >libsystem_pthread.dylib`_pthread_start</text>
</g>
<g >
<title>libsystem_pthread.dylib`thread_start (252,006 samples, 50.00%)</title><rect x="218.1" y="1621" width="590.0" height="15.0" fill="rgb(221,12,1)" rx="2" ry="2" />
<text  x="221.07" y="1631.5" >libsystem_pthread.dylib`thread_start</text>
</g>
<g >
<title>0xffffffff0000059b (48 samples, 0.01%)</title><rect x="11.8" y="53" width="0.2" height="15.0" fill="rgb(213,166,45)" rx="2" ry="2" />
<text  x="14.84" y="63.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1557" width="207.7" height="15.0" fill="rgb(214,77,35)" rx="2" ry="2" />
<text  x="13.38" y="1567.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="341" width="207.7" height="15.0" fill="rgb(209,28,42)" rx="2" ry="2" />
<text  x="13.38" y="351.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`wait_loop(void*) (5,255 samples, 1.04%)</title><rect x="795.8" y="1589" width="12.3" height="15.0" fill="rgb(236,43,37)" rx="2" ry="2" />
<text  x="798.77" y="1599.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1301" width="207.7" height="15.0" fill="rgb(223,82,37)" rx="2" ry="2" />
<text  x="13.38" y="1311.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="421" width="207.7" height="15.0" fill="rgb(231,21,0)" rx="2" ry="2" />
<text  x="13.38" y="431.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="469" width="207.7" height="15.0" fill="rgb(254,138,51)" rx="2" ry="2" />
<text  x="13.38" y="479.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="917" width="207.7" height="15.0" fill="rgb(208,110,3)" rx="2" ry="2" />
<text  x="13.38" y="927.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,705 samples, 17.60%)</title><rect x="10.4" y="165" width="207.7" height="15.0" fill="rgb(226,44,26)" rx="2" ry="2" />
<text  x="13.38" y="175.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1205" width="207.7" height="15.0" fill="rgb(219,100,41)" rx="2" ry="2" />
<text  x="13.38" y="1215.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1061" width="207.7" height="15.0" fill="rgb(225,71,44)" rx="2" ry="2" />
<text  x="13.38" y="1071.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1621" width="207.7" height="15.0" fill="rgb(211,160,14)" rx="2" ry="2" />
<text  x="13.38" y="1631.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1525" width="207.7" height="15.0" fill="rgb(245,210,41)" rx="2" ry="2" />
<text  x="13.38" y="1535.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="293" width="207.7" height="15.0" fill="rgb(249,170,9)" rx="2" ry="2" />
<text  x="13.38" y="303.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`Heap_Alloc (161,151 samples, 31.97%)</title><rect x="810.5" y="1605" width="377.3" height="15.0" fill="rgb(208,39,25)" rx="2" ry="2" />
<text  x="813.52" y="1615.5" >scalafmt-cli-out`Heap_Alloc</text>
</g>
<g >
<title>scalafmt-cli-out`Marker_MarkRoots (102,758 samples, 20.39%)</title><rect x="811.0" y="1573" width="240.5" height="15.0" fill="rgb(252,20,44)" rx="2" ry="2" />
<text  x="813.95" y="1583.5" >scalafmt-cli-out`Marker_MarkRoots</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="485" width="207.7" height="15.0" fill="rgb(239,217,14)" rx="2" ry="2" />
<text  x="13.38" y="495.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`_SM36scala.scalanative.runtime.CharArray$D5allociL35scala.scalanative.runtime.CharArrayEO (161,208 samples, 31.99%)</title><rect x="810.5" y="1621" width="377.4" height="15.0" fill="rgb(236,174,33)" rx="2" ry="2" />
<text  x="813.45" y="1631.5" >scalafmt-cli-out`_SM36scala.scalanative.runtime.Cha..</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1461" width="207.7" height="15.0" fill="rgb(236,74,30)" rx="2" ry="2" />
<text  x="13.38" y="1471.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="997" width="207.7" height="15.0" fill="rgb(248,43,15)" rx="2" ry="2" />
<text  x="13.38" y="1007.5" >0xffffffff00000062</text>
</g>
<g >
<title>libsystem_kernel.dylib`sigprocmask (805 samples, 0.16%)</title><rect x="1046.4" y="1557" width="1.9" height="15.0" fill="rgb(224,168,36)" rx="2" ry="2" />
<text  x="1049.45" y="1567.5" ></text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (86,715 samples, 17.21%)</title><rect x="12.7" y="37" width="203.0" height="15.0" fill="rgb(222,202,41)" rx="2" ry="2" />
<text  x="15.69" y="47.5" >libsystem_platform.dylib`_..</text>
</g>
<g >
<title>all (504,010 samples, 100%)</title><rect x="10.0" y="1637" width="1180.0" height="15.0" fill="rgb(252,15,21)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1397" width="207.7" height="15.0" fill="rgb(217,77,38)" rx="2" ry="2" />
<text  x="13.38" y="1407.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1029" width="207.7" height="15.0" fill="rgb(223,191,44)" rx="2" ry="2" />
<text  x="13.38" y="1039.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="853" width="207.7" height="15.0" fill="rgb(248,120,12)" rx="2" ry="2" />
<text  x="13.38" y="863.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,705 samples, 17.60%)</title><rect x="10.4" y="149" width="207.7" height="15.0" fill="rgb(254,135,6)" rx="2" ry="2" />
<text  x="13.38" y="159.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="757" width="207.7" height="15.0" fill="rgb(205,135,46)" rx="2" ry="2" />
<text  x="13.38" y="767.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`Heap_Collect (426 samples, 0.08%)</title><rect x="216.4" y="53" width="1.0" height="15.0" fill="rgb(218,108,44)" rx="2" ry="2" />
<text  x="219.43" y="63.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM47scala.scalanative.regex.MachineInput$UTF16InputD4stepiiEO (43 samples, 0.01%)</title><rect x="1189.8" y="1621" width="0.1" height="15.0" fill="rgb(222,190,4)" rx="2" ry="2" />
<text  x="1192.81" y="1631.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1333" width="207.7" height="15.0" fill="rgb(241,60,18)" rx="2" ry="2" />
<text  x="13.38" y="1343.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`LargeAllocator_GetBlock (49,633 samples, 9.85%)</title><rect x="1071.6" y="1589" width="116.2" height="15.0" fill="rgb(229,165,34)" rx="2" ry="2" />
<text  x="1074.60" y="1599.5" >scalafmt-cli-o..</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1493" width="207.7" height="15.0" fill="rgb(241,205,34)" rx="2" ry="2" />
<text  x="13.38" y="1503.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (87,942 samples, 17.45%)</title><rect x="10.5" y="101" width="205.9" height="15.0" fill="rgb(249,99,9)" rx="2" ry="2" />
<text  x="13.52" y="111.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1541" width="207.7" height="15.0" fill="rgb(241,177,37)" rx="2" ry="2" />
<text  x="13.38" y="1551.5" >0xffffffff00000062</text>
</g>
<g >
<title>0x1551a5700 (83 samples, 0.02%)</title><rect x="216.1" y="53" width="0.2" height="15.0" fill="rgb(242,71,51)" rx="2" ry="2" />
<text  x="219.08" y="63.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1221" width="207.7" height="15.0" fill="rgb(232,180,14)" rx="2" ry="2" />
<text  x="13.38" y="1231.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="533" width="207.7" height="15.0" fill="rgb(247,34,35)" rx="2" ry="2" />
<text  x="13.38" y="543.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1605" width="207.7" height="15.0" fill="rgb(240,225,19)" rx="2" ry="2" />
<text  x="13.38" y="1615.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1445" width="207.7" height="15.0" fill="rgb(242,50,31)" rx="2" ry="2" />
<text  x="13.38" y="1455.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="965" width="207.7" height="15.0" fill="rgb(235,198,50)" rx="2" ry="2" />
<text  x="13.38" y="975.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`BlockAllocator_AddFreeBlocks (69 samples, 0.01%)</title><rect x="1071.3" y="1573" width="0.2" height="15.0" fill="rgb(229,93,10)" rx="2" ry="2" />
<text  x="1074.32" y="1583.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1349" width="207.7" height="15.0" fill="rgb(217,162,24)" rx="2" ry="2" />
<text  x="13.38" y="1359.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="677" width="207.7" height="15.0" fill="rgb(231,164,53)" rx="2" ry="2" />
<text  x="13.38" y="687.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`_SM32scala.scalanative.runtime.Array$D4copyL16java.lang.ObjectiL16java.lang.ObjectiiuEO (46 samples, 0.01%)</title><rect x="810.3" y="1621" width="0.1" height="15.0" fill="rgb(221,58,9)" rx="2" ry="2" />
<text  x="813.26" y="1631.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1413" width="207.7" height="15.0" fill="rgb(253,141,40)" rx="2" ry="2" />
<text  x="13.38" y="1423.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="261" width="207.7" height="15.0" fill="rgb(249,22,25)" rx="2" ry="2" />
<text  x="13.38" y="271.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`Marker_MarkRoots (188 samples, 0.04%)</title><rect x="217.5" y="37" width="0.5" height="15.0" fill="rgb(248,110,5)" rx="2" ry="2" />
<text  x="220.53" y="47.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="245" width="207.7" height="15.0" fill="rgb(248,128,22)" rx="2" ry="2" />
<text  x="13.38" y="255.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1125" width="207.7" height="15.0" fill="rgb(253,89,14)" rx="2" ry="2" />
<text  x="13.38" y="1135.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1173" width="207.7" height="15.0" fill="rgb(231,89,13)" rx="2" ry="2" />
<text  x="13.38" y="1183.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1141" width="207.7" height="15.0" fill="rgb(225,188,14)" rx="2" ry="2" />
<text  x="13.38" y="1151.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1045" width="207.7" height="15.0" fill="rgb(208,173,12)" rx="2" ry="2" />
<text  x="13.38" y="1055.5" >0xffffffff00000062</text>
</g>
<g >
<title>0x155198230 (50 samples, 0.01%)</title><rect x="11.0" y="53" width="0.2" height="15.0" fill="rgb(223,180,9)" rx="2" ry="2" />
<text  x="14.05" y="63.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM31scala.scalanative.regex.MachineD11matchEngineL49scala.scalanative.regex.Machine$MatchOriginalArgsL45scala.scalanative.regex.Machine$MatchImplArgsLAL37scala.scalanative.regex.Machine$Queue_uEPT31scala.scalanative.regex.Machine (109 samples, 0.02%)</title><rect x="809.7" y="1621" width="0.2" height="15.0" fill="rgb(248,148,29)" rx="2" ry="2" />
<text  x="812.67" y="1631.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="933" width="207.7" height="15.0" fill="rgb(248,23,45)" rx="2" ry="2" />
<text  x="13.38" y="943.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="741" width="207.7" height="15.0" fill="rgb(207,169,5)" rx="2" ry="2" />
<text  x="13.38" y="751.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1365" width="207.7" height="15.0" fill="rgb(208,65,43)" rx="2" ry="2" />
<text  x="13.38" y="1375.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`Heap_Recycle (8,566 samples, 1.70%)</title><rect x="1051.5" y="1589" width="20.1" height="15.0" fill="rgb(239,112,34)" rx="2" ry="2" />
<text  x="1054.54" y="1599.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`Heap_Collect (56 samples, 0.01%)</title><rect x="809.5" y="1589" width="0.1" height="15.0" fill="rgb(231,228,42)" rx="2" ry="2" />
<text  x="812.46" y="1599.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM32scala.scalanative.runtime.Array$D4copyL31scala.scalanative.runtime.ArrayiL31scala.scalanative.runtime.ArrayiiuEO (86,715 samples, 17.21%)</title><rect x="12.7" y="53" width="203.0" height="15.0" fill="rgb(210,131,11)" rx="2" ry="2" />
<text  x="15.69" y="63.5" >scalafmt-cli-out`_SM32scal..</text>
</g>
<g >
<title>scalafmt-cli-out`Marker_markProgramStack (1,268 samples, 0.25%)</title><rect x="1048.6" y="1557" width="2.9" height="15.0" fill="rgb(240,3,36)" rx="2" ry="2" />
<text  x="1051.56" y="1567.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1317" width="207.7" height="15.0" fill="rgb(237,107,29)" rx="2" ry="2" />
<text  x="13.38" y="1327.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,445 samples, 17.55%)</title><rect x="10.5" y="117" width="207.0" height="15.0" fill="rgb(235,158,6)" rx="2" ry="2" />
<text  x="13.46" y="127.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff000001d7 (189 samples, 0.04%)</title><rect x="217.5" y="117" width="0.5" height="15.0" fill="rgb(233,170,43)" rx="2" ry="2" />
<text  x="220.53" y="127.5" ></text>
</g>
<g >
<title>libsystem_c.dylib`waitpid (1,950 samples, 0.39%)</title><rect x="218.1" y="1589" width="4.6" height="15.0" fill="rgb(227,9,30)" rx="2" ry="2" />
<text  x="221.13" y="1599.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,705 samples, 17.60%)</title><rect x="10.4" y="197" width="207.7" height="15.0" fill="rgb(231,129,39)" rx="2" ry="2" />
<text  x="13.38" y="207.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="837" width="207.7" height="15.0" fill="rgb(213,55,40)" rx="2" ry="2" />
<text  x="13.38" y="847.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`_SM19java.util.ArrayListD6removeiL16java.lang.ObjectEO (64 samples, 0.01%)</title><rect x="808.8" y="1621" width="0.1" height="15.0" fill="rgb(210,214,47)" rx="2" ry="2" />
<text  x="811.77" y="1631.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1589" width="207.7" height="15.0" fill="rgb(230,66,37)" rx="2" ry="2" />
<text  x="13.38" y="1599.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1477" width="207.7" height="15.0" fill="rgb(239,162,10)" rx="2" ry="2" />
<text  x="13.38" y="1487.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1509" width="207.7" height="15.0" fill="rgb(237,199,14)" rx="2" ry="2" />
<text  x="13.38" y="1519.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="389" width="207.7" height="15.0" fill="rgb(205,28,48)" rx="2" ry="2" />
<text  x="13.38" y="399.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1573" width="207.7" height="15.0" fill="rgb(236,139,28)" rx="2" ry="2" />
<text  x="13.38" y="1583.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="949" width="207.7" height="15.0" fill="rgb(250,164,35)" rx="2" ry="2" />
<text  x="13.38" y="959.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff0000059d (86,718 samples, 17.21%)</title><rect x="12.7" y="69" width="203.0" height="15.0" fill="rgb(246,55,25)" rx="2" ry="2" />
<text  x="15.68" y="79.5" >0xffffffff0000059d</text>
</g>
<g >
<title>scalafmt-cli-out`Heap_Collect (188 samples, 0.04%)</title><rect x="217.5" y="53" width="0.5" height="15.0" fill="rgb(252,29,9)" rx="2" ry="2" />
<text  x="220.53" y="63.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="453" width="207.7" height="15.0" fill="rgb(218,104,21)" rx="2" ry="2" />
<text  x="13.38" y="463.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="709" width="207.7" height="15.0" fill="rgb(240,177,29)" rx="2" ry="2" />
<text  x="13.38" y="719.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`DYLD-STUB$$waitpid (609 samples, 0.12%)</title><rect x="794.3" y="1589" width="1.5" height="15.0" fill="rgb(215,116,24)" rx="2" ry="2" />
<text  x="797.34" y="1599.5" ></text>
</g>
<g >
<title>scalafmt-cli-out`_SM11scala.None$D12productArityiEO (129 samples, 0.03%)</title><rect x="10.0" y="1605" width="0.3" height="15.0" fill="rgb(252,15,13)" rx="2" ry="2" />
<text  x="13.04" y="1615.5" ></text>
</g>
<g >
<title>0x1c900000455 (48 samples, 0.01%)</title><rect x="10.8" y="69" width="0.1" height="15.0" fill="rgb(218,19,7)" rx="2" ry="2" />
<text  x="13.76" y="79.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`__wait4 (241,686 samples, 47.95%)</title><rect x="222.7" y="1589" width="565.8" height="15.0" fill="rgb(253,36,28)" rx="2" ry="2" />
<text  x="225.69" y="1599.5" >libsystem_kernel.dylib`__wait4</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1253" width="207.7" height="15.0" fill="rgb(250,29,42)" rx="2" ry="2" />
<text  x="13.38" y="1263.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="805" width="207.7" height="15.0" fill="rgb(236,64,47)" rx="2" ry="2" />
<text  x="13.38" y="815.5" >0xffffffff00000062</text>
</g>
<g >
<title>scalafmt-cli-out`Heap_allocSmallSlow (189 samples, 0.04%)</title><rect x="217.5" y="69" width="0.5" height="15.0" fill="rgb(218,108,43)" rx="2" ry="2" />
<text  x="220.53" y="79.5" ></text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="597" width="207.7" height="15.0" fill="rgb(215,20,1)" rx="2" ry="2" />
<text  x="13.38" y="607.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1013" width="207.7" height="15.0" fill="rgb(213,228,36)" rx="2" ry="2" />
<text  x="13.38" y="1023.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="373" width="207.7" height="15.0" fill="rgb(247,177,26)" rx="2" ry="2" />
<text  x="13.38" y="383.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1381" width="207.7" height="15.0" fill="rgb(240,110,22)" rx="2" ry="2" />
<text  x="13.38" y="1391.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="565" width="207.7" height="15.0" fill="rgb(237,225,53)" rx="2" ry="2" />
<text  x="13.38" y="575.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1269" width="207.7" height="15.0" fill="rgb(245,127,9)" rx="2" ry="2" />
<text  x="13.38" y="1279.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1093" width="207.7" height="15.0" fill="rgb(244,33,17)" rx="2" ry="2" />
<text  x="13.38" y="1103.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="629" width="207.7" height="15.0" fill="rgb(243,203,2)" rx="2" ry="2" />
<text  x="13.38" y="639.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="773" width="207.7" height="15.0" fill="rgb(220,48,38)" rx="2" ry="2" />
<text  x="13.38" y="783.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="661" width="207.7" height="15.0" fill="rgb(220,86,17)" rx="2" ry="2" />
<text  x="13.38" y="671.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="581" width="207.7" height="15.0" fill="rgb(225,89,36)" rx="2" ry="2" />
<text  x="13.38" y="591.5" >0xffffffff00000062</text>
</g>
<g >
<title>0xffffffff00000062 (88,706 samples, 17.60%)</title><rect x="10.4" y="1157" width="207.7" height="15.0" fill="rgb(243,87,11)" rx="2" ry="2" />
<text  x="13.38" y="1167.5" >0xffffffff00000062</text>
</g>
</g>
</svg>
